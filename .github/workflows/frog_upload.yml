name: JFrogUploadArtifact

on:
  push:
    branches:
      - main

jobs:
  upload_to_jfrog:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: "/home/runner/work/github-jfrog-test/github-jfrog-test"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        with:
          version: latest
        env:
          JF_URL: "https://devopskiran002.jfrog.io/"
          JF_USER: "admin"
          JF_PASSWORD: "Testing1!"
    
      - name: Run JFrog CLI Ping
        run: |
          export JFROG_CLI_HOME="/home/runner/github-jfrog-test/github-jfrog-test"
          #upload artifacts
          jf rt u "servicenow-app-devops.zip" "local_repo"
          # Publish build info
          jf rt bp
          echo "Testing ==== ${{ env.GITHUB_WORKSPACE }}"
          echo "Testing 22 ${{ github.workspace }}"

  changeApproval:
    name: ServiceNow Change Approval
    needs: upload_to_jfrog
    runs-on: ubuntu-latest

    steps:     
      - name: ServiceNow Change Approval
        uses: ServiceNow/servicenow-devops-change@v3.1.0
        id: create
        with:
          devops-integration-token: "QO2GVXOa2Fl0Uc9Dy9iP5joN0hEtd7HM"
          instance-url: "https://sampath11.service-now.com/"
          tool-id: "de9b8da04791ce104543cc99e16d43bb"
          context-github: ${{ toJSON(github) }}
          job-name: 'ServiceNow Change Approval'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
      - name: Output of Change Creation
        run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }} and change-request-sys-id = ${{ steps.create.outputs.change-request-sys-id }} " >> $GITHUB_OUTPUT
    
  deploy:
    name: Deploy
    needs: changeApproval
    runs-on: ubuntu-latest

    steps:     
      - name: Run Deployment Script
        run: echo "Deployment Finished....."
